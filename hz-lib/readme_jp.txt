******************************************************************************
**                                                                          **
**           法造コア（jp.hozo.core） パッケージ　Ver 1.0.11                **
**                                                                          **
**                           簡易説明書 (2009/11/24)                        **
**                                                                          **
**                                                                          **
******************************************************************************


本ソフトウェア説明書の構成は次のとおりです。

 1. 法造コア（jp.hozo.core）とは
 2. 法造コアの構成
 3. 法造コアの主な機能
 4. 利用の際の注意点
 5. 課題点


------------------------------------------------------------------------------

１．法造コア（jp.hozo.core）とは

オントロジーエディタで作成したオントロジーデータを読み込み、Javaアプリケーションで利用するためのインタフェース（API）を提供します。

本ソフトウェアは、現在、大阪大学溝口研究室の協力のもと株式会社エネゲートが開発を進めているものであり、その一部は、下記の事業の一環として開発されたものです。
　　・厚生労働省 平成18年度科学技術振興調整費（重要政策課題への機動的対応の推進）
　　　「臨床医学データ解析のための医療知識基盤データベースの構築に関する研究」 
　　　（代表者：東京大学医学部大江和彦、分担者：大阪大学溝口理一郎、他）
　　・厚生労働省 平成19年度医療情報システム開発普及等委託費
　　　「医療情報システムのための医療知識基盤データベース研究開発事業」
　　　（代表者：東京大学医学部大江和彦、分担者：大阪大学溝口理一郎、他）

【著作権者】大阪大学 溝口研究室、株式会社 エネゲート
　　　　　　東京大学医学部附属病院企画情報運営部大江研究室


２．法造コアの構成

Javaのパッケージファイル（jp.hozo.core.*）で構成されています。
　　・「jp.hozo.core」 ：法造コア・パッケージ。オントロジーエディタで作成したオントロジーをJavaプログラムで利用するためのAPIを提供します。 
　　・「jp.hozo.core.util」：法造コア・パッケージで利用しているクラスファイルが含まれています。 
　　・「jp.hozo.corex」 ：法造利用API（法造コア利用パッケージ）。法造のオントロジーを利用するためのAPIを提供します。 
　　・「jp.hozo.corex.util」 ：法造利用API（法造コア利用パッケージ）で利用しているクラスファイルが含まれています。 
　　・「jp.hozo.resoner」 ：法造の推論機構のパッケージ。 
　［フォルダの内容］
　　　・「bin」：法造コア・実行モジュール（Javaクラス）
　　　・「src」：法造コア・ソースファイル（テストクラスのみ※注）
　　　・「doc」：javadocドキュメント
　　　・「data3」：オントロジサンプルファイル
　　　・「jar」：法造コアパッケージ（JAR）ファイル
　　　　　※注）パッケージ内にサンプルプログラム
　　　　　　　「TestOntology.java」（オントロジー処理テスト）
　　　　　　　「TestOntologySax.java」（オントロジー処理テスト - SAXパーサ指定）
　　　　　　が含まれています。
　［開発環境］
　　　・Java(TM) 2 SDK, Version 1.5.0_10 以降
　［ライセンス］
　　　・法造コア・パッケージ（jp.hozo.core）は、大阪大学溝口研究室と株式会社エネゲートがオリジナルで開発したものであり、BSDライセンスに準じたライセンスが適用されます。
　　　　　※注：詳細に関しては、付属の「licence(core).txt」を参照のこと。
　　　・法造利用API（jp.hozo.corex）および法造の推論機構（jp.hozo.resoner）は、上述の平成18年度科学技術振興調整費（重要政策課題への機動的対応の推進）および平成19年度医療情報システム開発普及等委託費の事業の一環として開発されたものであり、大阪大学溝口研究室と株式会社エネゲートと東京大学医学部附属病院企画情報運営部大江研究室を著作権者としたライセンスが適用されます。
　　　　　※注：詳細に関しては、付属の「licence(corex).txt」を参照のこと。


３．法造コアの主な機能

（１）オントロジーの処理
　①オントロジーデータの読込
　　※ファイル出力機能を実装しました（2005/11/09）。
　②概念の参照・追加・削除
　　－ラベル、概念タイプによる検索
　　－ロール概念／ロールホルダ・クラスの導入
　　－上位、下位概念の参照
　　※Any概念、基本値概念、基本関係概念を設定できるようにしました（2008/03/05）。
　③スロットの参照・追加・削除
　　－ロール概念の参照
　　－制約概念の参照
　　－子スロットの作成
　　※スロットのCardinality処理を追加しました（2006/05/29）。
　　※制約概念にロールホルダー、クラス種が設定されている場合の処理を実装しました（2006/09/28）。
　　※クラス制約のOR条件を設定できるようになりました（2008/03/05）。
　　※クラス制約にp-オペレータ（部分概念クラス制約）を設定できるようになりました（2008/03/05）。
　④関係の参照・追加・削除
　　－全体部分関係（Part-of）、属性関係（Attribute-of）の追加
　⑤依存概念の読み込み
　　※分散対応ファイル（.ont）にも対応しました。
　⑥OWLデータの出力
　　※OWL形式のデータ出力に対応しました。
　　※出力タイプも指定できるようになりました（2008/05/29）。
　⑦オントロジー推論機構（2008/11/27）
　　－オントロジー検証処理
　　－オントロジー探索処理
　　－オントロジー検索処理

（２）モデルの処理
　①モデルデータの読込
　　※ファイル出力機能を実装しました（2005/11/10）。
　②概念インスタンスの参照・追加・削除
　　－ラベル、概念インスタンスタイプによる参照
　③スロットインスタンスの参照・追加・削除
　　－制約概念インスタンスの参照・設定
　　－種概念クラスへの対応
　④関係インスタンスの参照・追加・削除
　　－関係概念関係インスタンスの追加

※法造コアのAPI仕様に関しては、「HozoCore」フォルダ内「/doc/index.html」をWebブラウザで開いて下さい。


４．利用の際の注意点
・ファイルを保存するメソッドは実装されていません。
　　⇒RDF(S)やOWLなど標準規格への出力対応も
・スロット作成時に
　　－ロール概念／ロールホルダー
　　－全体部分関係／属性関係
　を自動生成します。
　また、スロットインスタンス作成時には、ロール概念のインスタンスのみを作成するように実装されています。
・現時点では、概念、スロットを削除する際に関連する関係は自動的に削除されるようにしています。
・座標などのスタイル情報は、データ読込時に格納していません。
	⇒エディタを実装する際に描画オブジェクトクラス（GraphicObject.java）を定義しました。
・関係概念の関係（RConceptRelation）に関しては、
　　－オントロジー構築時におけるスロット間関係（制約）
　　－モデル構築時におけるスロットインスタンス間関係（制約）
　　－モデル構築時における概念インスタンス間関係
　に利用されていますが、きっちりと区別して処理できておりません。
・モデル処理について、概念、スロットや関係のインスタンスを作成時に、参照するオントロジーの概念や関係も作成するようにしています。
　本来はオントロジーと同期をとって生成しないといけませんが、現時点ではオントロジー管理システムが無い為、個別に作成するようになっています。
　解決方法としては、モデル作成時に参照するオントロジーをすべて再現するか、必要に応じてオントロジー側のオブジェクトを随時、呼び出さなればなりません。
・モデルファイル読込時に、オントロジーファイルが存在すれば同時に読み込みます。
	⇒モデルファイルと同じフォルダにあれば読み込み可能です。
・スロットの上下移動するメソッドを追加しました（2006/07/25）。
・XMLパーサを指定できるようになりました。
	⇒[jp.hozo.core.util.OntologyUtilitySax.java]
	⇒[jp.hozo.core.util.ModelUtilitySax.java]
・拡張版のオントロジーファイル(.ont)にも対応しました。
	⇒[jp.hozo.corex.util.HZOntology.java]
	⇒[jp.hozo.corex.util.HZModel.java]


５．課題点
・値概念クラス（ValueConcept.java）は実装していますが、概念モデルに適応できていません。
・色などの属性値をもったクラスの実装（♯概念の実装）。
　　⇒2005/10/18にクラス実装はしました。
	⇒2006/09/28　種概念クラスを本格実装しました（SpeciesConcept.java）。
	　ただし、制約概念として設定する場合のクラスとして定義したため、基本概念のクラス種としての扱いは見直す必要があります。
・ロール概念／ロールホルダーの生成タイミングは再検討する必要があります。
　特に、ロールホルダーに関しては、ロールホルダー名の無いものも概念化しているので要注意。
・関係クラスは、（現時点では）2項関係のみの対応となっております。
　　⇒2005/10/18に関係概念関係クラスのみN項関係の記述が可能になりました。
　　⇒2005/11/4に関係概念と関係概念クラスのスロット参照を追加しました。
　　　また、スロット関係はスロットとロール概念のどちらか一方を設定できるようになっています。
・外部参照オントロジーは実装されておりません。
　　⇒2005/8/22に追加実装しました。
・内部のデータ保持はList（ArrayList）クラスで保持していますが、IDなど任意で識別できる方法があれば、Mapクラス（Hashtable）を利用する方法を採用する事もできます。
・IDの導入。
　　⇒ID管理機能の導入
　　⇒スタイル情報を分離して管理するための参照情報として必要？
・ラベルの重複チェック機能は実装されていません。
・公理クラスの実装。また、その公理記述に対する処理（推論）を実装する必要があります。
　　⇒2005/10/18に追加実装しました。
　　⇒推論処理は当面実装しない方針です。
・エラー処理の設計・実装
・文字コード（UTF-8標準にする）、特殊文字（XML禁止文字など）への対応。
　　⇒2005/12/15 文字コードを指定できるように修正しました。
	⇒2005/12/19 不正ファイル名、XML禁止文字のチェックをするように修正しました。
・ファイル保存機能を実装しましたが、以下のものには対応していません。
　　－キャンパスサイズの情報
　　－ツリーやスロットの開閉情報
・モデル保存機能に致命的なバグあり。インスタンス間の関係がある場合、保存できない。
　　⇒2005/12/15 修正済み
・スロットのラベルの処理を追加したが、検証できていない。
　　⇒2006/09/28　モデルエディタに導入することで検証済み
・スロットのタイプの取得メソッドを追加したが、どのように全体に反映させるかは要検討。
　　⇒「B1,B2,R1,R2-1,R2-2」と「NW, OR」との関係
　　⇒2006/07/04 スロットのタイプを取得するメソッドを追加しました。
　　　　⇒ getCurrentSlotType()

※何か不明瞭な点、不都合な点がございましたら、ontology@enegate.jpまでご連絡下さい。


６．著作権について

 オリジナルコードの初期開発者は、株式会社エネゲートです。  

 配布されるバイナリファイルに関しては、以下のライセンスが適用されます。
 
・法造コア・パッケージ（jp.hozo.core）は、大阪大学溝口研究室と株式会社エネゲートがオリジナルで開発したものであり、BSDライセンスに準じたライセンスが適用されます。
　　※注：詳細に関しては、付属の「licence(core).txt」を参照のこと。
・法造利用API（jp.hozo.corex）および法造の推論機構（jp.hozo.resoner）は、上述の平成18年度科学技術振興調整費（重要政策課題への機動的対応の推進）および平成19年度医療情報システム開発普及等委託費の事業の一環として開発されたものであり、大阪大学溝口研究室と株式会社エネゲートと東京大学医学部附属病院企画情報運営部大江研究室が著作権者としたライセンスが適用されます。
　　※注：詳細に関しては、付属の「licence(corex).txt」を参照のこと。


７．サンプルプログラムについて

・実行方法（JARファイル）
　コマンドラインから実行します。

　　>java -cp hozocore.jar;hozocorex.jar jp.hozo.test.TestOntology "./data3/BIKE_sample.xml"

・実行結果
　オントロジーファイルを読み込み（「TestOntology.java」77行目前後　ont.load()）
　全体概念のis-a階層をルートから辿って、スロット内容とともに表示します。
　※「TestOntologySax.java」は同様のサンプルですが、XMLファイル読込処理にSAXパーサを
　　指定してXMLファイルをより高速に読み込むように処理しています。
　　（拡張オントロジークラス「jp.hozo.corex.HZOntology」を使用）

＊＊＊＊＊＊＊　実行結果、ここから　＊＊＊＊＊＊＊＊

[Error Message]

[Ontlogy]:17
BIKE_sample.xml

[Whole Concept]:15
乗り物
  -二輪車
    p/o "車輪":車輪
    a/o "重さ(kg)":正の整数
    p/o "ハンドル":ハンドル
    p/o "かご":かご
    -自転車
      p/o "ペダル":ペダル
      p/o "サドル":サドル
      -マウンテンバイク
      -シティサイクル
    -自動二輪車
車輪
ハンドル
  -アップ型ハンドル
  -フラット型ハンドル
かご
正の整数
ペダル
サドル
人間

[Relation Concept]:2
連動関係
所有関係

（以後、省略）

＊＊＊＊＊＊＊　ここまで　＊＊＊＊＊＊＊＊


以上
